[M30]
Suppose that C1 = (Q1, I1, O1, f1) and C2 = (Q2, I2, O2, f2) are computational methods. For 
example, C1 might stand for Algorithm E as in notes/Algorithm E,  except that m and n are 
restricted in magnitude, and C2 might stand for a computer program implementation of Algorithm 
E. (Thus, Q2 might be the set of all states of the machine, i.e., all possible configurations of
its memory and registers; f2 might be the definition of single machine actions; and I2 might be
the set of initial states, each including the program that determines the greatest common
divisor as well as the particular values of m and n.)
	Formulate a set-theoretic definition of the concept "C2 is a representation of C1" or
"C2 simulates C1." This is to mean intuitively that any computation sequence C1 is mimicked by
C2, except that C2 might take more steps in which to do the computation and it might retain
more information in its states. (We thereby obtain a rigorous interpretation of the statement, 
"Program X is an implementation of Algorithm Y.")

1. Each state in I1 must have a 1 to 1 mapping to a state in I2.
2. Each state in O2 must map to a state in O1 (Many to 1).

The book says:
3	a. If a state q21 is in Q2, then q21 must map to a state q11 in Q1.
	b. Iterating f2 1 or more times on a state q21 must eventually reach a state that maps
		to a state in Q1. State q22 is the earliest state at which this is possible, and maps to
		state q12 in Q1.
	c. Performing f1 on q11 must be equivalent to q12.
	
	However this implies that every state in Q2 must map to a state in Q1. C2 is designed to be 
	an algorithm that "might take more steps in which to do the computation", so C2 will 
	possibly require intermediate states to perform the larger steps in C1. Although one could 
	argue that an intermediate state q2 in C2 maps to the whole step's beginning at state q1 in
	C1, this would imply that q2 has made some progress that q1 hasn't made yet. Therefore, q2 
	is further along in processing the algorithm than q1, and q1 is not equivalent to q2. I 
	propose a different requirement 3a:
	
3	a. If a state q11 is in Q1, then a state q21 in Q2 must map to q11.
	
	This way, intermediate states in C2 do not have to map to states in C1, and each state in C1
	must be distinctly modeled by a state or series of states in C2, making it a clear
	implementation of the algorithm.